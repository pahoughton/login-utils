# 1997-01-15 (cc) <paul@pahoughton.net>
#


#set -x

export have_bash_profile=true

export OSNAME='@os_name@'
export OSVER='@os_ver@'
export host=@host_name@

[ -z "$HOSTNAME" ] && export HOSTNAME=$host


if [ -f ~/.bash_profile_user ]; then
  . ~/.bash_profile_user
fi

if [ -f ~/.bash_profile_${host} ]; then
  . ~/.bash_profile_${host}
fi

if [ -f ~/.bash_profile_${OSNAME} ]; then
  . ~/.bash_profile_${OSNAME}
fi

# set TOOL_DIR
#
if [ -n `eval echo \\${${PROJECT}_TOOL_DIR}` ] ; then

  eval export TOOL_DIR=\${${PROJECT}_TOOL_DIR}

else

  tooldirs="$host_tool_dir /opt/tools /ci/tools /usr/local $HOME/tools"

  for dir in $tooldirs ; do
    if [ -d $dir ] ; then
      export TOOL_DIR=$dir
      break
    fi
  done
  unset tooldirs
  unset dir
fi

# set UTIL_DIR
if [ -n "$host_util_dir" ] ; then
  export UTIL_DIR=$host_util_dir;
else

  utildirs="/Tools /usr/local $HOME/tools"

  for dir in $utildirs ; do
    if [ -d $dir ] ; then
      export UTIL_DIR=$dir
      break
    fi
  done
  unset utildirs
  unset dir
fi

# minikube
[ -z "$MINIKUBE_WANTUPDATENOTIFICATION" ] && \
  export MINIKUBE_WANTUPDATENOTIFICATION=false
[ -z "$MINIKUBE_WANTREPORTERRORPROMPT" ] && \
  export MINIKUBE_WANTREPORTERRORPROMPT=false
[ -z "$MINIKUBE_HOME" ] && \
  export MINIKUBE_HOME=$HOME
[ -z "$CHANGE_MINIKUBE_NONE_USER" ] && \
  export CHANGE_MINIKUBE_NONE_USER=true
[ -z "$KUBECONFIG" ] && \
  export KUBECONFIG=$HOME/.kube/config

# set GOPATH
for dir in "$HOME/wip/go" "$HOME/go" ; do
  if [ -d "$dir" ] ; then
    export GOPATH="$dir"
    break
  fi
done


if [ -z "$SYBASE" ] ; then
  # Sybase
  syb_dirs="
  $TOOL_DIR/sybase
  $UTIL_DIR/sybase
  /opt/sybase/syb11
  /opt/sybase
  /sybase/syb11
  /usr/sybase
  "

  for dir in $syb_dirs ; do
    if [ -d $dir/lib ] ; then
      export SYBASE=$dir
      break
    fi
  done
  unset syb_dirs
  unset dir
fi


# Perl5Lib
lclp5lib=$HOME/perl5/lib/perl5
if [ -d $lclp5lib ] ; then
  if [ -n "$PERL5LIB" ] ; then
    export PERL5LIB=$lclp5lib:$PERL5LIB
  else
    export PERL5LIB=$lclp5lib
  fi
fi
unset lclp5lib

# mozilla plugins
if [ -n "$MOZILLA_HOME" ] ; then
  export MOZILLA_HOME
  export NPX_PLUGIN_PATH=$MOZILLA_HOME/plugins

  mozilla_plugin_dirs="$ACROREAD_PLUGING_DIR"
  for pdir in "$mozilla_plugin_dirs" ; do
    [ -d $pdir ] && NPX_PLUGIN_PATH="$NPX_PLUGIN_PATH:$pdir"
  done
  unset mozilla_plugin_dirs
  unset pdir
fi

for cpp in /lib/cpp /bin/cpp /usr/bin/cpp ; do
  if [ -x $cpp ] ; then
    export IMAKECPP=$cpp
    break
  fi
done
unset cpp

#
# LD_LIBRARY_PATH
#

[ -f $HOME/.bash_setldlibpath ] && . $HOME/.bash_setldlibpath

#
# Setup my PATH
#

# prepend available dirs - note last dir will be first in path

prepend_dirs="$host_prepend_path"
unset host_prepend_path

[ -n "$JAVA_HOME" ] && prepend_dirs="$prepend_dirs $JAVA_HOME/bin"

if [ -n "$host_cxx_compiler" ] ; then
  prepend_dirs=`eval echo $prepend_dirs \\$${host_cxx_compiler}_PATH | tr : ' '`
else
  [ -n "$SUNWS5_PATH" ] && [ -d /opt/SUNWspro/SC5.0 ] &&
    prepend_dirs=`echo $prepend_dirs $SUNWS5_PATH | tr : ' '`
fi

if [ -n "$SYBASE" ] ; then
  if [ -n "$SYBASE_OCS" ] ; then
    prepend_dirs="$prepend_dirs $SYBASE/$SYBASE_OCS/bin"
  else
    prepend_dirs="$prepend_dirs $SYBASE/bin"
  fi
fi

[ -n "$ORACLE_HOME" ] && prepend_dirs="$prepend_dirs $ORACLE_HOME/bin"
[ -n "$UTIL_DIR" ]    && prepend_dirs="$prepend_dirs $UTIL_DIR/bin"
[ -n "$TOOL_DIR" ]    && prepend_dirs="$prepend_dirs $TOOL_DIR/bin"
[ -n "$GOPATH" ]      && prepend_dirs="$prepend_dirs $GOPATH/bin"

prepend_dirs="$prepend_dirs
    $HOME/.local/bin
    $HOME/local/bin
    $HOME/bin
    $HOME/scripts"

for pd in $prepend_dirs ; do
  [ -d $pd ] && ! echo $PATH | fgrep $pd >/dev/null 2>&1 && PATH=$pd:$PATH
done
unset pd
unset prepend_dirs

PATH=.:$PATH

#
# Done with PATH (FINALLY!)
#

# MANPATH=
# try_man_paths=`echo $PATH | sed -e 's@:@ @g' -e 's@/bin@@g' `
# for md in $try_man_paths ; do
#  [ -d "$md/man" ] &&
#    ! echo $MANPATH | fgrep "$md/man" >/dev/null 2>&1 &&
#    MANPATH=$MANPATH:$md/man
# done

# unset md
# unset try_man_paths
# export MANPATH=`echo $MANPATH | sed -e 's/^://' -e 's/:$//'`

#
# Gnu INFOPATH
#
info_base_dirs="
$HOME/.emacs.d/info
$TOOL_DIR/share
$UTIL_DIR/share
/opt/local/share
/usr/local/share
/usr/local
/usr/share
/usr
"

for dir in $info_base_dirs ; do
  [ -d $dir/info ] &&
    ! echo $INFOPATH | fgrep -s $dir/info >/dev/null 2>&1 &&
    INFOPATH=$INFOPATH:$dir/info
done

unset info_base_dirs
unset dir
export INFOPATH=`echo $INFOPATH | sed -e 's/^://' -e 's/:$//'`

# less output left on screen on exit :)
export LESS=-X

# no anisble color
export ANSIBLE_NOCOLOR=1

case $- in

  *i*)          # interactive
    if [ -z "$DISPLAY" -o "$DISPLAY" = ':0.0' ] ; then

      fromhost=`who -m | sed -e 's/.*:[0-9][0-9][ 	]*(*\([^):]*\).*/\1/'`
      thishost=`hostname`

      if [ -n "$fromhost" ] && [ "$fromhost" != "$thishost" ] ; then

	export DISPLAY=$fromhost:0.0

	# - remove prompting
	# read -p "Set DISPLAY to [hostname|none] (${fromhost}:0.0)? " disp

	# if [ -z "$disp" ] ; then
	#   export DISPLAY=$fromhost:0.0
	# else
	#   if [ $disp != "none" ] ; then
	#     export DISPLAY=$disp:0.0
	#   fi
	# fi
      fi
    else
      if [ "$OSNAME" = "CYGWIN_NT-5.1" ] && [ $DISPLAY = ":0" ] ; then
	DISPLAY=localhost:0.0
      fi
    fi

    # $USER not empty and bashrc loaded was for that user
    [ -n "${USER}" -a "${have_bashrc}" == "${USER}-${TERM}" ] || . $HOME/.bashrc

    ;;
  *)
    ;;
esac

# Local Variables:
# mode:ksh
# End:
